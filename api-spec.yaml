openapi: 3.0.0
info:
  title: Status List Mock API
  version: 1.0.0
paths:
  /issue:
    post:
      tags:
        - issue
      description: Endpoint to issue credentials
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: "eyJ..."
              description: |
                JWT containing issuer information and status expiry
                Required header claims:
                  - alg: (string) Algorithm used for signing the JWT ("ES256")
                  - typ: (string) Type of the token ("JWT")
                  - kid: (string) Key ID used to identify the signing key in the credential issuer JWKS endpoint
                Required payload claims: 
                  - iss: (string) Must match a known clientId
                  - iat: (number) (unix timestamp) JWT issued at time
                  - statusExpiry: (number) (unix timestamp) Date the issued credential expires
                  - jti: (string) JWT ID
              required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  idx:
                    type: number
                    example: 0
                  uri:
                    type: string
                    example: "https://status-list-mock.mobile.{environment}.account.gov.uk/t/db6ac25a-bbd3-4b4a-b2d1-c75cb92d0ca6"
                required:
                  - idx
                  - uri
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        requestTemplates:
          application/json:
            statusCode: 200
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${IssueFunction}:live/invocations"
        type: "aws_proxy"
  /revoke:
    post:
      description: Endpoint to revoke credentials
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: "eyJ..."
              description: |
                JWT containing the index and URI to revoke
                Required header claims:
                  - alg: (string) Algorithm used for signing the JWT ("ES256")
                  - typ: (string) Type of the token ("JWT")
                  - kid: (string) Key ID used to identify the signing key in the credential issuer JWKS endpoint
                Required payload claims: 
                  - iss: (string) Must match a known clientId
                  - iat: (number) (unix timestamp) JWT issued at time
                  - idx: (number) The index to revoke
                  - uri: (string) The URI of the status list that holds the issued credential
                  - jti: (string) JWT ID
              required: true
        required: true
      responses:
        "202":
          description: Accepted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum: ["Request processed for revocation"]
                    description: Status message indicating the result
                  revokedAt:
                    type: number
                    example: 1760447340
                    description: Unix timestamp (in seconds) when the credential was revoked
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        requestTemplates:
          application/json:
            statusCode: 200
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${RevokeFunction}:live/invocations"
        type: "aws_proxy"
  /t/{statusList}:
    get:
      description: Endpoint to get a status list
      parameters:
        - in: path
          name: statusList
          schema:
            type: string
          required: true
          description: Status list identifier
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
            Cache-Control:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
                example: "eyJ.."
                description: |
                  Status list JWT
                  Required header claims:
                    - alg: (string) Algorithm used for signing the JWT ("ES256")
                    - typ: (string) Type of the token ("statuslist+jwt")
                    - kid: (string) Key ID used to identify the signing key in the status list JWKS endpoint
                  Required payload claims: 
                    - iss: (string) Status list URL
                    - iat: (number) (unix timestamp) JWT issued at time
                    - exp: (number) (unix timestamp) JWT expiration time (iat + ttl)
                    - status_list: (object)
                    - status_list.bits: (number) Number of bits per token in the status list (2)
                    - status_list.lst: (string) Status values for all the tokens this list conveys statuses for
                    - sub: (string) The URI of the status list that holds the issued credential
                    - ttl: (string) JWT time to live
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: ["StatusListBucketApiRole", "Arn"]
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:s3:path/${StatusListBucket}/t/{statusList}"
        requestParameters:
          integration.request.path.statusList: method.request.path.statusList
        responses:
          "200":
            statusCode: "200"
            description: OK
            responseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Cache-Control: "'max-age=259200'"
            contentHandling: "CONVERT_TO_TEXT"
          default:
            statusCode: "500"
            responseParameters:
              method.response.header.Content-Type: "'text/plain'"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "aws"
  /.well-known/jwks.json:
    get:
      description: Endpoint to retrieve public keys in JWKS format
      responses:
        "200":
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
            Cache-Control:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      properties:
                        kid:
                          type: string
                        kty:
                          type: string
                        alg:
                          type: string
                        use:
                          type: string
                        x:
                          type: string
                        y:
                          type: string
              example:
                {
                  "keys":
                    [
                      {
                        "kty": "EC",
                        "use": "sig",
                        "crv": "P-256",
                        "kid": "5dcbee863b5d7cc30c9ba1f7393dacc6c16610782e4b6a191f94a7e8b1e1510f",
                        "x": "6jCKX_QRrmTeEJi-uiwcYqu8BgMgl70g2pdAst24MPE",
                        "y": "icPzjbSk6apD_SNvQt8NWOPlPeGG4KYU55GfnARryoY",
                        "alg": "ES256",
                      },
                    ],
                }
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        credentials:
          Fn::GetAtt: ["JwksBucketApiRole", "Arn"]
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:s3:path/${JwksBucket}/.well-known/jwks.json"
        responses:
          "200":
            statusCode: "200"
            description: OK
            responseParameters:
              method.response.header.Content-Type: "'application/json'"
              method.response.header.Cache-Control: "'max-age=300'"
            contentHandling: "CONVERT_TO_TEXT"
          default:
            statusCode: "500"
            responseParameters:
              method.response.header.Content-Type: "'text/plain'"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        type: "aws"
